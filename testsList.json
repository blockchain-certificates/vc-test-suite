reading report-basic.json
undefined
{ fullTitle: '`id` properties MUST be a single URI',
  title: 'MUST be a single URI',
  duration: 3585,
  result: 'passed',
  err: {} }
{ fullTitle: '`type` properties MUST be one or more URIs (negative)',
  title: 'MUST be one or more URIs (negative)',
  duration: 3764,
  result: 'failed',
  err:
   { message:
      "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
     showDiff: true,
     actual:
      { '@context': [Array],
        id: 'http://example.edu/credentials/3732',
        type: 'VerifiableCredential',
        issuer: 'https://example.edu/issuers/14',
        issuanceDate: '2010-01-01T19:23:24Z',
        credentialSubject: [Object],
        proof: [Object] },
     expected: 'Error',
     stack:
      "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } }
{ fullTitle:
   '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
  title: 'MUST be present (negative - credentialSubject missing)',
  duration: 3169,
  result: 'failed',
  err:
   { message:
      "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
     showDiff: true,
     actual:
      { '@context': [Array],
        id: 'http://example.edu/credentials/58473',
        type: [Array],
        issuer: 'https://example.edu/issuers/14',
        issuanceDate: '2010-01-01T19:23:24Z',
        proof: [Object] },
     expected: 'Error',
     stack:
      "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } }
{ fullTitle:
   '`issuer` property MUST be a single URI (negative - not URI)',
  title: 'MUST be a single URI (negative - not URI)',
  duration: 3637,
  result: 'failed',
  err:
   { message:
      "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
     showDiff: true,
     actual:
      { '@context': [Array],
        id: 'http://example.edu/credentials/3732',
        type: [Array],
        issuer: 'example',
        issuanceDate: '2010-01-01T19:23:24Z',
        credentialSubject: [Object],
        proof: [Object] },
     expected: 'Error',
     stack:
      "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } }
{ fullTitle:
   '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
  title: 'MUST be an RFC3339 datetime (negative - Array)',
  duration: 3797,
  result: 'failed',
  err:
   { message:
      "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
     showDiff: true,
     actual:
      { '@context': [Array],
        id: 'http://example.edu/credentials/3732',
        type: [Array],
        issuer: 'https://example.edu/issuers/14',
        issuanceDate: [Array],
        credentialSubject: [Object],
        proof: [Object] },
     expected: 'Error',
     stack:
      "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } }
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
31
[ { fullTitle: '@context MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 4155,
    result: 'passed',
    err: {} },
  { fullTitle: '@context MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 2616,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1',
    title: 'first value MUST be https://www.w3.org/2018/credentials/v1',
    duration: 3579,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    title:
     'first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    duration: 1657,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context subsequent items can be objects that express context information',
    title:
     'subsequent items can be objects that express context information',
    duration: 3668,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3585,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI (negative)',
    title: 'MUST be a single URI (negative)',
    duration: 1650,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 3400,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 3764,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type',
    duration: 3268,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    duration: 3172,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`credentialSubject` property MUST be present',
    title: 'MUST be present',
    duration: 3991,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present, may be a set of objects',
    title: 'MUST be present, may be a set of objects',
    duration: 3485,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
    title: 'MUST be present (negative - credentialSubject missing)',
    duration: 3169,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be present',
    title: 'MUST be present',
    duration: 3277,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be present (negative - missing issuer)',
    title: 'MUST be present (negative - missing issuer)',
    duration: 3071,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3323,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be a single URI (negative - not URI)',
    title: 'MUST be a single URI (negative - not URI)',
    duration: 3637,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI (negative - Array)',
    title: 'MUST be a single URI (negative - Array)',
    duration: 3274,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuanceDate` property MUST be present',
    title: 'MUST be present',
    duration: 3100,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be present (negative - missing issuanceDate)',
    title: 'MUST be present (negative - missing issuanceDate)',
    duration: 30011,
    result: 'failed',
    err:
     { stack:
        'Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)\n    at listOnTimeout (internal/timers.js:535:17)\n    at processTimers (internal/timers.js:479:7)',
       message:
        'Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)' } },
  { fullTitle: '`issuanceDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 7463,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3651,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3797,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`expirationDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 3522,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3338,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3481,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: 'Presentations MUST be of type `VerifiablePresentation`',
    title: 'MUST be of type `VerifiablePresentation`',
    duration: 6,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof`',
    title: 'MUST include `verifiableCredential` and `proof`',
    duration: 5,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    duration: 5,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    duration: 7,
    result: 'passed',
    err: {} } ]
reading report-schema.json
undefined
{ fullTitle: '`id` properties MUST be a single URI',
  title: 'MUST be a single URI',
  result: 'unknown',
  err: {} }
{ fullTitle: '`type` properties MUST be one or more URIs (negative)',
  title: 'MUST be one or more URIs (negative)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
  title: 'MUST be present (negative - credentialSubject missing)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuer` property MUST be a single URI (negative - not URI)',
  title: 'MUST be a single URI (negative - not URI)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
  title: 'MUST be an RFC3339 datetime (negative - Array)',
  result: 'unknown',
  err: {} }
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
35
[ { fullTitle: '@context MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 4155,
    result: 'passed',
    err: {} },
  { fullTitle: '@context MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 2616,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1',
    title: 'first value MUST be https://www.w3.org/2018/credentials/v1',
    duration: 3579,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    title:
     'first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    duration: 1657,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context subsequent items can be objects that express context information',
    title:
     'subsequent items can be objects that express context information',
    duration: 3668,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3585,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI (negative)',
    title: 'MUST be a single URI (negative)',
    duration: 1650,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 3400,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 3764,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type',
    duration: 3268,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    duration: 3172,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`credentialSubject` property MUST be present',
    title: 'MUST be present',
    duration: 3991,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present, may be a set of objects',
    title: 'MUST be present, may be a set of objects',
    duration: 3485,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
    title: 'MUST be present (negative - credentialSubject missing)',
    duration: 3169,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be present',
    title: 'MUST be present',
    duration: 3277,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be present (negative - missing issuer)',
    title: 'MUST be present (negative - missing issuer)',
    duration: 3071,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3323,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be a single URI (negative - not URI)',
    title: 'MUST be a single URI (negative - not URI)',
    duration: 3637,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI (negative - Array)',
    title: 'MUST be a single URI (negative - Array)',
    duration: 3274,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuanceDate` property MUST be present',
    title: 'MUST be present',
    duration: 3100,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be present (negative - missing issuanceDate)',
    title: 'MUST be present (negative - missing issuanceDate)',
    duration: 30011,
    result: 'failed',
    err:
     { stack:
        'Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)\n    at listOnTimeout (internal/timers.js:535:17)\n    at processTimers (internal/timers.js:479:7)',
       message:
        'Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)' } },
  { fullTitle: '`issuanceDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 7463,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3651,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3797,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`expirationDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 3522,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3338,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3481,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: 'Presentations MUST be of type `VerifiablePresentation`',
    title: 'MUST be of type `VerifiablePresentation`',
    duration: 6,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof`',
    title: 'MUST include `verifiableCredential` and `proof`',
    duration: 5,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    duration: 5,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    duration: 7,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Credential Schema (optional) `credentialSchema` MUST provide one or more data schemas',
    title: '`credentialSchema` MUST provide one or more data schemas',
    duration: 3254,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3510,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3551,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... value of `id` MUST be a URI identifying a schema file',
    title: 'value of `id` MUST be a URI identifying a schema file',
    duration: 3369,
    result: 'passed',
    err: {} } ]
reading report-refresh.json
undefined
{ fullTitle: '`id` properties MUST be a single URI',
  title: 'MUST be a single URI',
  result: 'unknown',
  err: {} }
{ fullTitle: '`type` properties MUST be one or more URIs (negative)',
  title: 'MUST be one or more URIs (negative)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
  title: 'MUST be present (negative - credentialSubject missing)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuer` property MUST be a single URI (negative - not URI)',
  title: 'MUST be a single URI (negative - not URI)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
  title: 'MUST be an RFC3339 datetime (negative - Array)',
  result: 'unknown',
  err: {} }
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
39
[ { fullTitle: '@context MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 4155,
    result: 'passed',
    err: {} },
  { fullTitle: '@context MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 2616,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1',
    title: 'first value MUST be https://www.w3.org/2018/credentials/v1',
    duration: 3579,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    title:
     'first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    duration: 1657,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context subsequent items can be objects that express context information',
    title:
     'subsequent items can be objects that express context information',
    duration: 3668,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3585,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI (negative)',
    title: 'MUST be a single URI (negative)',
    duration: 1650,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 3400,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 3764,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type',
    duration: 3268,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    duration: 3172,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`credentialSubject` property MUST be present',
    title: 'MUST be present',
    duration: 3991,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present, may be a set of objects',
    title: 'MUST be present, may be a set of objects',
    duration: 3485,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
    title: 'MUST be present (negative - credentialSubject missing)',
    duration: 3169,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be present',
    title: 'MUST be present',
    duration: 3277,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be present (negative - missing issuer)',
    title: 'MUST be present (negative - missing issuer)',
    duration: 3071,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3323,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be a single URI (negative - not URI)',
    title: 'MUST be a single URI (negative - not URI)',
    duration: 3637,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI (negative - Array)',
    title: 'MUST be a single URI (negative - Array)',
    duration: 3274,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuanceDate` property MUST be present',
    title: 'MUST be present',
    duration: 3100,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be present (negative - missing issuanceDate)',
    title: 'MUST be present (negative - missing issuanceDate)',
    duration: 30011,
    result: 'failed',
    err:
     { stack:
        'Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)\n    at listOnTimeout (internal/timers.js:535:17)\n    at processTimers (internal/timers.js:479:7)',
       message:
        'Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)' } },
  { fullTitle: '`issuanceDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 7463,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3651,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3797,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`expirationDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 3522,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3338,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3481,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: 'Presentations MUST be of type `VerifiablePresentation`',
    title: 'MUST be of type `VerifiablePresentation`',
    duration: 6,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof`',
    title: 'MUST include `verifiableCredential` and `proof`',
    duration: 5,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    duration: 5,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    duration: 7,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Credential Schema (optional) `credentialSchema` MUST provide one or more data schemas',
    title: '`credentialSchema` MUST provide one or more data schemas',
    duration: 3254,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3510,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3551,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... value of `id` MUST be a URI identifying a schema file',
    title: 'value of `id` MUST be a URI identifying a schema file',
    duration: 3369,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Refresh Service (optional) `refreshService` MUST provide one or more refresh services',
    title: '`refreshService` MUST provide one or more refresh services',
    duration: 4534,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3420,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3536,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... value of `id` MUST be a URL identifying a service endpoint',
    title: 'value of `id` MUST be a URL identifying a service endpoint',
    duration: 3789,
    result: 'passed',
    err: {} } ]
reading report-evidence.json
undefined
{ fullTitle: '`id` properties MUST be a single URI',
  title: 'MUST be a single URI',
  result: 'unknown',
  err: {} }
{ fullTitle: '`type` properties MUST be one or more URIs (negative)',
  title: 'MUST be one or more URIs (negative)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
  title: 'MUST be present (negative - credentialSubject missing)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuer` property MUST be a single URI (negative - not URI)',
  title: 'MUST be a single URI (negative - not URI)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
  title: 'MUST be an RFC3339 datetime (negative - Array)',
  result: 'unknown',
  err: {} }
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
41
[ { fullTitle: '@context MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 4155,
    result: 'passed',
    err: {} },
  { fullTitle: '@context MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 2616,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1',
    title: 'first value MUST be https://www.w3.org/2018/credentials/v1',
    duration: 3579,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    title:
     'first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    duration: 1657,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context subsequent items can be objects that express context information',
    title:
     'subsequent items can be objects that express context information',
    duration: 3668,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3585,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI (negative)',
    title: 'MUST be a single URI (negative)',
    duration: 1650,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 3400,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 3764,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type',
    duration: 3268,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    duration: 3172,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`credentialSubject` property MUST be present',
    title: 'MUST be present',
    duration: 3991,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present, may be a set of objects',
    title: 'MUST be present, may be a set of objects',
    duration: 3485,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
    title: 'MUST be present (negative - credentialSubject missing)',
    duration: 3169,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be present',
    title: 'MUST be present',
    duration: 3277,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be present (negative - missing issuer)',
    title: 'MUST be present (negative - missing issuer)',
    duration: 3071,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3323,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be a single URI (negative - not URI)',
    title: 'MUST be a single URI (negative - not URI)',
    duration: 3637,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI (negative - Array)',
    title: 'MUST be a single URI (negative - Array)',
    duration: 3274,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuanceDate` property MUST be present',
    title: 'MUST be present',
    duration: 3100,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be present (negative - missing issuanceDate)',
    title: 'MUST be present (negative - missing issuanceDate)',
    duration: 30011,
    result: 'failed',
    err:
     { stack:
        'Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)\n    at listOnTimeout (internal/timers.js:535:17)\n    at processTimers (internal/timers.js:479:7)',
       message:
        'Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)' } },
  { fullTitle: '`issuanceDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 7463,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3651,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3797,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`expirationDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 3522,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3338,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3481,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: 'Presentations MUST be of type `VerifiablePresentation`',
    title: 'MUST be of type `VerifiablePresentation`',
    duration: 6,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof`',
    title: 'MUST include `verifiableCredential` and `proof`',
    duration: 5,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    duration: 5,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    duration: 7,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Credential Schema (optional) `credentialSchema` MUST provide one or more data schemas',
    title: '`credentialSchema` MUST provide one or more data schemas',
    duration: 3254,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3510,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3551,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... value of `id` MUST be a URI identifying a schema file',
    title: 'value of `id` MUST be a URI identifying a schema file',
    duration: 3369,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Refresh Service (optional) `refreshService` MUST provide one or more refresh services',
    title: '`refreshService` MUST provide one or more refresh services',
    duration: 4534,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3420,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3536,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... value of `id` MUST be a URL identifying a service endpoint',
    title: 'value of `id` MUST be a URL identifying a service endpoint',
    duration: 3789,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Evidence (optional) `evidence` MUST provide one or more evidence objects',
    title: '`evidence` MUST provide one or more evidence objects',
    duration: 4297,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `evidence`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3982,
    result: 'passed',
    err: {} } ]
reading report-status.json
undefined
{ fullTitle: '`id` properties MUST be a single URI',
  title: 'MUST be a single URI',
  result: 'unknown',
  err: {} }
{ fullTitle: '`type` properties MUST be one or more URIs (negative)',
  title: 'MUST be one or more URIs (negative)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
  title: 'MUST be present (negative - credentialSubject missing)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuer` property MUST be a single URI (negative - not URI)',
  title: 'MUST be a single URI (negative - not URI)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
  title: 'MUST be an RFC3339 datetime (negative - Array)',
  result: 'unknown',
  err: {} }
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
44
[ { fullTitle: '@context MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 4155,
    result: 'passed',
    err: {} },
  { fullTitle: '@context MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 2616,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1',
    title: 'first value MUST be https://www.w3.org/2018/credentials/v1',
    duration: 3579,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    title:
     'first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    duration: 1657,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context subsequent items can be objects that express context information',
    title:
     'subsequent items can be objects that express context information',
    duration: 3668,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3585,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI (negative)',
    title: 'MUST be a single URI (negative)',
    duration: 1650,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 3400,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 3764,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type',
    duration: 3268,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    duration: 3172,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`credentialSubject` property MUST be present',
    title: 'MUST be present',
    duration: 3991,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present, may be a set of objects',
    title: 'MUST be present, may be a set of objects',
    duration: 3485,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
    title: 'MUST be present (negative - credentialSubject missing)',
    duration: 3169,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be present',
    title: 'MUST be present',
    duration: 3277,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be present (negative - missing issuer)',
    title: 'MUST be present (negative - missing issuer)',
    duration: 3071,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3323,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be a single URI (negative - not URI)',
    title: 'MUST be a single URI (negative - not URI)',
    duration: 3637,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI (negative - Array)',
    title: 'MUST be a single URI (negative - Array)',
    duration: 3274,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuanceDate` property MUST be present',
    title: 'MUST be present',
    duration: 3100,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be present (negative - missing issuanceDate)',
    title: 'MUST be present (negative - missing issuanceDate)',
    duration: 30011,
    result: 'failed',
    err:
     { stack:
        'Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)\n    at listOnTimeout (internal/timers.js:535:17)\n    at processTimers (internal/timers.js:479:7)',
       message:
        'Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)' } },
  { fullTitle: '`issuanceDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 7463,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3651,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3797,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`expirationDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 3522,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3338,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3481,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: 'Presentations MUST be of type `VerifiablePresentation`',
    title: 'MUST be of type `VerifiablePresentation`',
    duration: 6,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof`',
    title: 'MUST include `verifiableCredential` and `proof`',
    duration: 5,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    duration: 5,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    duration: 7,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Credential Schema (optional) `credentialSchema` MUST provide one or more data schemas',
    title: '`credentialSchema` MUST provide one or more data schemas',
    duration: 3254,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3510,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3551,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... value of `id` MUST be a URI identifying a schema file',
    title: 'value of `id` MUST be a URI identifying a schema file',
    duration: 3369,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Refresh Service (optional) `refreshService` MUST provide one or more refresh services',
    title: '`refreshService` MUST provide one or more refresh services',
    duration: 4534,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3420,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3536,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... value of `id` MUST be a URL identifying a service endpoint',
    title: 'value of `id` MUST be a URL identifying a service endpoint',
    duration: 3789,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Evidence (optional) `evidence` MUST provide one or more evidence objects',
    title: '`evidence` MUST provide one or more evidence objects',
    duration: 4297,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `evidence`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3982,
    result: 'passed',
    err: {} },
  { fullTitle: '`credentialStatus` property MUST include `id` and `type`',
    title: 'MUST include `id` and `type`',
    duration: 4687,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialStatus` property MUST include `id` and `type` (negative - missing `id`)',
    title: 'MUST include `id` and `type` (negative - missing `id`)',
    duration: 4022,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`credentialStatus` property MUST include `id` and `type` (negative - missing `type`)',
    title: 'MUST include `id` and `type` (negative - missing `type`)',
    duration: 4366,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } } ]
reading report-tou.json
undefined
{ fullTitle: '`id` properties MUST be a single URI',
  title: 'MUST be a single URI',
  result: 'unknown',
  err: {} }
{ fullTitle: '`type` properties MUST be one or more URIs (negative)',
  title: 'MUST be one or more URIs (negative)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
  title: 'MUST be present (negative - credentialSubject missing)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuer` property MUST be a single URI (negative - not URI)',
  title: 'MUST be a single URI (negative - not URI)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
  title: 'MUST be an RFC3339 datetime (negative - Array)',
  result: 'unknown',
  err: {} }
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
46
[ { fullTitle: '@context MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 4155,
    result: 'passed',
    err: {} },
  { fullTitle: '@context MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 2616,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1',
    title: 'first value MUST be https://www.w3.org/2018/credentials/v1',
    duration: 3579,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    title:
     'first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    duration: 1657,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context subsequent items can be objects that express context information',
    title:
     'subsequent items can be objects that express context information',
    duration: 3668,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3585,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI (negative)',
    title: 'MUST be a single URI (negative)',
    duration: 1650,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 3400,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 3764,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type',
    duration: 3268,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    duration: 3172,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`credentialSubject` property MUST be present',
    title: 'MUST be present',
    duration: 3991,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present, may be a set of objects',
    title: 'MUST be present, may be a set of objects',
    duration: 3485,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
    title: 'MUST be present (negative - credentialSubject missing)',
    duration: 3169,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be present',
    title: 'MUST be present',
    duration: 3277,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be present (negative - missing issuer)',
    title: 'MUST be present (negative - missing issuer)',
    duration: 3071,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3323,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be a single URI (negative - not URI)',
    title: 'MUST be a single URI (negative - not URI)',
    duration: 3637,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI (negative - Array)',
    title: 'MUST be a single URI (negative - Array)',
    duration: 3274,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuanceDate` property MUST be present',
    title: 'MUST be present',
    duration: 3100,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be present (negative - missing issuanceDate)',
    title: 'MUST be present (negative - missing issuanceDate)',
    duration: 30011,
    result: 'failed',
    err:
     { stack:
        'Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)\n    at listOnTimeout (internal/timers.js:535:17)\n    at processTimers (internal/timers.js:479:7)',
       message:
        'Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)' } },
  { fullTitle: '`issuanceDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 7463,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3651,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3797,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`expirationDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 3522,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3338,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3481,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: 'Presentations MUST be of type `VerifiablePresentation`',
    title: 'MUST be of type `VerifiablePresentation`',
    duration: 6,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof`',
    title: 'MUST include `verifiableCredential` and `proof`',
    duration: 5,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    duration: 5,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    duration: 7,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Credential Schema (optional) `credentialSchema` MUST provide one or more data schemas',
    title: '`credentialSchema` MUST provide one or more data schemas',
    duration: 3254,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3510,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3551,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... value of `id` MUST be a URI identifying a schema file',
    title: 'value of `id` MUST be a URI identifying a schema file',
    duration: 3369,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Refresh Service (optional) `refreshService` MUST provide one or more refresh services',
    title: '`refreshService` MUST provide one or more refresh services',
    duration: 4534,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3420,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3536,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... value of `id` MUST be a URL identifying a service endpoint',
    title: 'value of `id` MUST be a URL identifying a service endpoint',
    duration: 3789,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Evidence (optional) `evidence` MUST provide one or more evidence objects',
    title: '`evidence` MUST provide one or more evidence objects',
    duration: 4297,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `evidence`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3982,
    result: 'passed',
    err: {} },
  { fullTitle: '`credentialStatus` property MUST include `id` and `type`',
    title: 'MUST include `id` and `type`',
    duration: 4687,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialStatus` property MUST include `id` and `type` (negative - missing `id`)',
    title: 'MUST include `id` and `type` (negative - missing `id`)',
    duration: 4022,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`credentialStatus` property MUST include `id` and `type` (negative - missing `type`)',
    title: 'MUST include `id` and `type` (negative - missing `type`)',
    duration: 4366,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     'Terms of Use (optional) `termsOfUse` MUST provide one or more ToU objects',
    title: '`termsOfUse` MUST provide one or more ToU objects',
    duration: 4683,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `termsOfUse`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3821,
    result: 'passed',
    err: {} } ]
reading report-ldp.json
undefined
{ fullTitle: '`id` properties MUST be a single URI',
  title: 'MUST be a single URI',
  result: 'unknown',
  err: {} }
{ fullTitle: '`type` properties MUST be one or more URIs (negative)',
  title: 'MUST be one or more URIs (negative)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
  title: 'MUST be present (negative - credentialSubject missing)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuer` property MUST be a single URI (negative - not URI)',
  title: 'MUST be a single URI (negative - not URI)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
  title: 'MUST be an RFC3339 datetime (negative - Array)',
  result: 'unknown',
  err: {} }
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
49
[ { fullTitle: '@context MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 4155,
    result: 'passed',
    err: {} },
  { fullTitle: '@context MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 2616,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1',
    title: 'first value MUST be https://www.w3.org/2018/credentials/v1',
    duration: 3579,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    title:
     'first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    duration: 1657,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context subsequent items can be objects that express context information',
    title:
     'subsequent items can be objects that express context information',
    duration: 3668,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3585,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI (negative)',
    title: 'MUST be a single URI (negative)',
    duration: 1650,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 3400,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 3764,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type',
    duration: 3268,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    duration: 3172,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`credentialSubject` property MUST be present',
    title: 'MUST be present',
    duration: 3991,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present, may be a set of objects',
    title: 'MUST be present, may be a set of objects',
    duration: 3485,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
    title: 'MUST be present (negative - credentialSubject missing)',
    duration: 3169,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be present',
    title: 'MUST be present',
    duration: 3277,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be present (negative - missing issuer)',
    title: 'MUST be present (negative - missing issuer)',
    duration: 3071,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3323,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be a single URI (negative - not URI)',
    title: 'MUST be a single URI (negative - not URI)',
    duration: 3637,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI (negative - Array)',
    title: 'MUST be a single URI (negative - Array)',
    duration: 3274,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuanceDate` property MUST be present',
    title: 'MUST be present',
    duration: 3100,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be present (negative - missing issuanceDate)',
    title: 'MUST be present (negative - missing issuanceDate)',
    duration: 30011,
    result: 'failed',
    err:
     { stack:
        'Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)\n    at listOnTimeout (internal/timers.js:535:17)\n    at processTimers (internal/timers.js:479:7)',
       message:
        'Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)' } },
  { fullTitle: '`issuanceDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 7463,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3651,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3797,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`expirationDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 3522,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3338,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3481,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: 'Presentations MUST be of type `VerifiablePresentation`',
    title: 'MUST be of type `VerifiablePresentation`',
    duration: 6,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof`',
    title: 'MUST include `verifiableCredential` and `proof`',
    duration: 5,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    duration: 5,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    duration: 7,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Credential Schema (optional) `credentialSchema` MUST provide one or more data schemas',
    title: '`credentialSchema` MUST provide one or more data schemas',
    duration: 3254,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3510,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3551,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... value of `id` MUST be a URI identifying a schema file',
    title: 'value of `id` MUST be a URI identifying a schema file',
    duration: 3369,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Refresh Service (optional) `refreshService` MUST provide one or more refresh services',
    title: '`refreshService` MUST provide one or more refresh services',
    duration: 4534,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3420,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3536,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... value of `id` MUST be a URL identifying a service endpoint',
    title: 'value of `id` MUST be a URL identifying a service endpoint',
    duration: 3789,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Evidence (optional) `evidence` MUST provide one or more evidence objects',
    title: '`evidence` MUST provide one or more evidence objects',
    duration: 4297,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `evidence`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3982,
    result: 'passed',
    err: {} },
  { fullTitle: '`credentialStatus` property MUST include `id` and `type`',
    title: 'MUST include `id` and `type`',
    duration: 4687,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialStatus` property MUST include `id` and `type` (negative - missing `id`)',
    title: 'MUST include `id` and `type` (negative - missing `id`)',
    duration: 4022,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`credentialStatus` property MUST include `id` and `type` (negative - missing `type`)',
    title: 'MUST include `id` and `type` (negative - missing `type`)',
    duration: 4366,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     'Terms of Use (optional) `termsOfUse` MUST provide one or more ToU objects',
    title: '`termsOfUse` MUST provide one or more ToU objects',
    duration: 4683,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `termsOfUse`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3821,
    result: 'passed',
    err: {} },
  { fullTitle: '`proof` property MUST be present',
    title: 'MUST be present',
    duration: 4273,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`proof` property MUST include specific method using the type property',
    title: 'MUST include specific method using the type property',
    duration: 4093,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`proof` property MUST include type property (negative - missing proof type)',
    title: 'MUST include type property (negative - missing proof type)',
    duration: 3940,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } } ]
reading report-zkp.json
undefined
{ fullTitle: '`id` properties MUST be a single URI',
  title: 'MUST be a single URI',
  result: 'unknown',
  err: {} }
{ fullTitle: '`type` properties MUST be one or more URIs (negative)',
  title: 'MUST be one or more URIs (negative)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
  title: 'MUST be present (negative - credentialSubject missing)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuer` property MUST be a single URI (negative - not URI)',
  title: 'MUST be a single URI (negative - not URI)',
  result: 'unknown',
  err: {} }
{ fullTitle:
   '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
  title: 'MUST be an RFC3339 datetime (negative - Array)',
  result: 'unknown',
  err: {} }
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
undefined
67
[ { fullTitle: '@context MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 4155,
    result: 'passed',
    err: {} },
  { fullTitle: '@context MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 2616,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1',
    title: 'first value MUST be https://www.w3.org/2018/credentials/v1',
    duration: 3579,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    title:
     'first value MUST be https://www.w3.org/2018/credentials/v1 (negative)',
    duration: 1657,
    result: 'passed',
    err: {} },
  { fullTitle:
     '@context subsequent items can be objects that express context information',
    title:
     'subsequent items can be objects that express context information',
    duration: 3668,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3585,
    result: 'passed',
    err: {} },
  { fullTitle: '`id` properties MUST be a single URI (negative)',
    title: 'MUST be a single URI (negative)',
    duration: 1650,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs',
    title: 'MUST be one or more URIs',
    duration: 3400,
    result: 'passed',
    err: {} },
  { fullTitle: '`type` properties MUST be one or more URIs (negative)',
    title: 'MUST be one or more URIs (negative)',
    duration: 3764,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type',
    duration: 3268,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`type` properties for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    title:
     'for Credential MUST be `VerifiableCredential` plus specific type (negative)',
    duration: 3172,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`credentialSubject` property MUST be present',
    title: 'MUST be present',
    duration: 3991,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present, may be a set of objects',
    title: 'MUST be present, may be a set of objects',
    duration: 3485,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialSubject` property MUST be present (negative - credentialSubject missing)',
    title: 'MUST be present (negative - credentialSubject missing)',
    duration: 3169,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be present',
    title: 'MUST be present',
    duration: 3277,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be present (negative - missing issuer)',
    title: 'MUST be present (negative - missing issuer)',
    duration: 3071,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI',
    title: 'MUST be a single URI',
    duration: 3323,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuer` property MUST be a single URI (negative - not URI)',
    title: 'MUST be a single URI (negative - not URI)',
    duration: 3637,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuer` property MUST be a single URI (negative - Array)',
    title: 'MUST be a single URI (negative - Array)',
    duration: 3274,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`issuanceDate` property MUST be present',
    title: 'MUST be present',
    duration: 3100,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be present (negative - missing issuanceDate)',
    title: 'MUST be present (negative - missing issuanceDate)',
    duration: 30011,
    result: 'failed',
    err:
     { stack:
        'Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)\n    at listOnTimeout (internal/timers.js:535:17)\n    at processTimers (internal/timers.js:479:7)',
       message:
        'Timeout of 30000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/10-basic.js)' } },
  { fullTitle: '`issuanceDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 7463,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3651,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`issuanceDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3797,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: '`expirationDate` property MUST be an RFC3339 datetime',
    title: 'MUST be an RFC3339 datetime',
    duration: 3522,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - RFC3339)',
    title: 'MUST be an RFC3339 datetime (negative - RFC3339)',
    duration: 3338,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`expirationDate` property MUST be an RFC3339 datetime (negative - Array)',
    title: 'MUST be an RFC3339 datetime (negative - Array)',
    duration: 3481,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: 'Presentations MUST be of type `VerifiablePresentation`',
    title: 'MUST be of type `VerifiablePresentation`',
    duration: 6,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof`',
    title: 'MUST include `verifiableCredential` and `proof`',
    duration: 5,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-8.jsonld: Permission denied\n' } },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)',
    duration: 5,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Presentations MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    title:
     'MUST include `verifiableCredential` and `proof` (negative - missing `proof`)',
    duration: 7,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Credential Schema (optional) `credentialSchema` MUST provide one or more data schemas',
    title: '`credentialSchema` MUST provide one or more data schemas',
    duration: 3254,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3510,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3551,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `credentialSchema`... value of `id` MUST be a URI identifying a schema file',
    title: 'value of `id` MUST be a URI identifying a schema file',
    duration: 3369,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Refresh Service (optional) `refreshService` MUST provide one or more refresh services',
    title: '`refreshService` MUST provide one or more refresh services',
    duration: 4534,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3420,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3536,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `refreshService`... value of `id` MUST be a URL identifying a service endpoint',
    title: 'value of `id` MUST be a URL identifying a service endpoint',
    duration: 3789,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Evidence (optional) `evidence` MUST provide one or more evidence objects',
    title: '`evidence` MUST provide one or more evidence objects',
    duration: 4297,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `evidence`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3982,
    result: 'passed',
    err: {} },
  { fullTitle: '`credentialStatus` property MUST include `id` and `type`',
    title: 'MUST include `id` and `type`',
    duration: 4687,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`credentialStatus` property MUST include `id` and `type` (negative - missing `id`)',
    title: 'MUST include `id` and `type` (negative - missing `id`)',
    duration: 4022,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     '`credentialStatus` property MUST include `id` and `type` (negative - missing `type`)',
    title: 'MUST include `id` and `type` (negative - missing `type`)',
    duration: 4366,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle:
     'Terms of Use (optional) `termsOfUse` MUST provide one or more ToU objects',
    title: '`termsOfUse` MUST provide one or more ToU objects',
    duration: 4683,
    result: 'passed',
    err: {} },
  { fullTitle:
     'each object within `termsOfUse`... MUST specify a `type` property with a valid value',
    title: 'MUST specify a `type` property with a valid value',
    duration: 3821,
    result: 'passed',
    err: {} },
  { fullTitle: '`proof` property MUST be present',
    title: 'MUST be present',
    duration: 4273,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`proof` property MUST include specific method using the type property',
    title: 'MUST include specific method using the type property',
    duration: 4093,
    result: 'passed',
    err: {} },
  { fullTitle:
     '`proof` property MUST include type property (negative - missing proof type)',
    title: 'MUST include type property (negative - missing proof type)',
    duration: 3940,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }" } },
  { fullTitle: 'A verifiable credential... MUST contain a credentialSchema',
    title: 'MUST contain a credentialSchema',
    duration: 3552,
    result: 'passed',
    err: {} },
  { fullTitle:
     'A verifiable credential... MUST contain a credentialSchema (negative - credentialSchema missing)',
    title:
     'MUST contain a credentialSchema (negative - credentialSchema missing)',
    duration: 3869,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }" } },
  { fullTitle: 'A verifiable credential... MUST contain a proof',
    title: 'MUST contain a proof',
    duration: 3866,
    result: 'passed',
    err: {} },
  { fullTitle:
     'A verifiable credential... MUST contain a proof (negative - missing)',
    title: 'MUST contain a proof (negative - missing)',
    duration: 3798,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }" } },
  { fullTitle: 'Each credentialSchema... MUST specify a type',
    title: 'MUST specify a type',
    duration: 3756,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Each credentialSchema... MUST specify a type (negative - type missing)',
    title: 'MUST specify a type (negative - type missing)',
    duration: 4040,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }" } },
  { fullTitle: 'Each credentialSchema... MUST specify an `id` property',
    title: 'MUST specify an `id` property',
    duration: 3798,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Each credentialSchema... MUST specify an `id` property (negative - `id` missing)',
    title: 'MUST specify an `id` property (negative - `id` missing)',
    duration: 3798,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }" } },
  { fullTitle:
     'Each credentialSchema... value of `id` MUST be a URI identifying a schema file',
    title: 'value of `id` MUST be a URI identifying a schema file',
    duration: 5279,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Each proof... MUST include specific method using the type property',
    title: 'MUST include specific method using the type property',
    duration: 3620,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Each proof... proof MUST include type property (negative - missing proof type)',
    title:
     'proof MUST include type property (negative - missing proof type)',
    duration: 3615,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }" } },
  { fullTitle:
     'A verifiable presentation... MUST be of type `VerifiablePresentation`',
    title: 'MUST be of type `VerifiablePresentation`',
    duration: 7,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n' } },
  { fullTitle:
     'A verifiable presentation... MUST include `verifiableCredential`',
    title: 'MUST include `verifiableCredential`',
    duration: 7,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Socket.stream.socket.on (internal/child_process.js:403:11)\n    at Pipe._handle.close (net.js:614:12)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n' } },
  { fullTitle:
     'A verifiable presentation... MUST include `verifiableCredential` (negative - missing `verifiableCredential`)',
    title:
     'MUST include `verifiableCredential` (negative - missing `verifiableCredential`)',
    duration: 8,
    result: 'passed',
    err: {} },
  { fullTitle: 'A verifiable presentation... MUST include `proof`',
    title: 'MUST include `proof`',
    duration: 7,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n' } },
  { fullTitle:
     'A verifiable presentation... MUST include `proof` (negative - missing `proof`)',
    title: 'MUST include `proof` (negative - missing `proof`)',
    duration: 8,
    result: 'passed',
    err: {} },
  { fullTitle:
     'Each verifiable credential... MUST have a `credentialSchema` member',
    title: 'MUST have a `credentialSchema` member',
    duration: 15,
    result: 'failed',
    err:
     { stack:
        'Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)',
       message:
        'Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n',
       killed: false,
       code: 126,
       signal: null,
       cmd:
        '  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld',
       stdout: '',
       stderr:
        '/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n' } },
  { fullTitle:
     'Each verifiable credential... MUST contain a credentialSchema (negative - credentialSchema missing)',
    title:
     'MUST contain a credentialSchema (negative - credentialSchema missing)',
    duration: 4178,
    result: 'failed',
    err:
     { message:
        "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
       showDiff: true,
       actual: [Object],
       expected: 'Error',
       stack:
        "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }" } } ]
