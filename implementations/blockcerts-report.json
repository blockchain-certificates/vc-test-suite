{
  "tests": [
    {
      "fullTitle": "Basic Documents @context MUST be one or more URIs",
      "title": "MUST be one or more URIs",
      "duration": 3,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents @context first value MUST be https://www.w3.org/2018/credentials/v1",
      "title": "first value MUST be https://www.w3.org/2018/credentials/v1",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents @context subsequent items can be objects that express context information",
      "title": "subsequent items can be objects that express context information",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `id` properties MUST be a single URI",
      "title": "MUST be a single URI",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `type` properties MUST be one or more URIs",
      "title": "MUST be one or more URIs",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `type` properties for Credential MUST be `VerifiableCredential` plus specific type",
      "title": "for Credential MUST be `VerifiableCredential` plus specific type",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `credentialSubject` property MUST be present",
      "title": "MUST be present",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `credentialSubject` property MUST be present, may be a set of objects",
      "title": "MUST be present, may be a set of objects",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `issuer` property MUST be present",
      "title": "MUST be present",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `issuer` property MUST be a single URI",
      "title": "MUST be a single URI",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `issuanceDate` property MUST be present",
      "title": "MUST be present",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `issuanceDate` property MUST be an RFC3339 datetime",
      "title": "MUST be an RFC3339 datetime",
      "duration": 1,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `expirationDate` property MUST be an RFC3339 datetime",
      "title": "MUST be an RFC3339 datetime",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents Presentations MUST be of type `VerifiablePresentation`",
      "title": "MUST be of type `VerifiablePresentation`",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents Presentations MUST include `verifiableCredential` and `proof`",
      "title": "MUST include `verifiableCredential` and `proof`",
      "duration": 0,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents @context MUST be one or more URIs (negative)",
      "title": "MUST be one or more URIs (negative)",
      "duration": 60007,
      "result": "failed",
      "err": {
        "stack": "Error: Timeout of 60000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/11-basic-negatives.js)\n    at listOnTimeout (node:internal/timers:559:17)\n    at processTimers (node:internal/timers:502:7)",
        "message": "Timeout of 60000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/julien/work/vc-test-suite/test/vc-data-model-1.0/11-basic-negatives.js)"
      }
    },
    {
      "fullTitle": "Basic Documents @context first value MUST be https://www.w3.org/2018/credentials/v1 (negative)",
      "title": "first value MUST be https://www.w3.org/2018/credentials/v1 (negative)",
      "duration": 1378,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `id` properties MUST be a single URI (negative)",
      "title": "MUST be a single URI (negative)",
      "duration": 110,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `type` properties MUST be one or more URIs (negative)",
      "title": "MUST be one or more URIs (negative)",
      "duration": 108,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `type` properties for Credential MUST be `VerifiableCredential` plus specific type (negative)",
      "title": "for Credential MUST be `VerifiableCredential` plus specific type (negative)",
      "duration": 108,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `credentialSubject` property MUST be present (negative - credentialSubject missing)",
      "title": "MUST be present (negative - credentialSubject missing)",
      "duration": 114,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `issuer` property MUST be present (negative - missing issuer)",
      "title": "MUST be present (negative - missing issuer)",
      "duration": 119,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `issuer` property MUST be a single URI (negative - not URI)",
      "title": "MUST be a single URI (negative - not URI)",
      "duration": 111,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `issuer` property MUST be a single URI (negative - Array)",
      "title": "MUST be a single URI (negative - Array)",
      "duration": 107,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `issuanceDate` property MUST be present (negative - missing issuanceDate)",
      "title": "MUST be present (negative - missing issuanceDate)",
      "duration": 110,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `issuanceDate` property MUST be an RFC3339 datetime (negative - RFC3339)",
      "title": "MUST be an RFC3339 datetime (negative - RFC3339)",
      "duration": 109,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `issuanceDate` property MUST be an RFC3339 datetime (negative - Array)",
      "title": "MUST be an RFC3339 datetime (negative - Array)",
      "duration": 108,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `expirationDate` property MUST be an RFC3339 datetime (negative - RFC3339)",
      "title": "MUST be an RFC3339 datetime (negative - RFC3339)",
      "duration": 107,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents `expirationDate` property MUST be an RFC3339 datetime (negative - Array)",
      "title": "MUST be an RFC3339 datetime (negative - Array)",
      "duration": 107,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents Presentations MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)",
      "title": "MUST include `verifiableCredential` and `proof` (negative - missing `verifiableCredential`)",
      "duration": 114,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Basic Documents Presentations MUST include `verifiableCredential` and `proof` (negative - missing `proof`)",
      "title": "MUST include `verifiableCredential` and `proof` (negative - missing `proof`)",
      "duration": 109,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Credential Status (optional) `credentialStatus` property MUST include `id` and `type`",
      "title": "MUST include `id` and `type`",
      "duration": 4687,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Credential Status (optional) `credentialStatus` property MUST include `id` and `type` (negative - missing `id`)",
      "title": "MUST include `id` and `type` (negative - missing `id`)",
      "duration": 4022,
      "result": "failed",
      "err": {
        "message": "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
        "showDiff": true,
        "actual": {
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
          ],
          "id": "http://example.edu/credentials/3732",
          "type": [
            "VerifiableCredential",
            "UniversityDegreeCredential"
          ],
          "issuer": "https://example.edu/issuers/14",
          "issuanceDate": "2010-01-01T19:23:24Z",
          "credentialSubject": {
            "id": "did:example:ebfeb1f712ebc6f1c276e12ec21",
            "degree": {
              "type": "BachelorDegree",
              "name": "Bachelor of Science in Mechanical Engineering"
            }
          },
          "credentialStatus": {
            "type": "CredentialStatusList2017"
          },
          "proof": {
            "type": "MerkleProof2019",
            "created": "2020-08-20T14:51:29.116259",
            "proofValue": "zMcm4LfQFUZkWZyLpe3qTKQHMrj7nUFTNSsEpzFQD2U5rs9uMghGquHsA3MtNzUH3UpkvT8QcLKWsfwRERU81fVrHrHZ1GsUbrseopk7DpABTbLy7Es1hEWF2o8fxuEiJ3ezAqeoipATypY6K1DVJ4BbKYMkgsNS44iLxWe9XsWSU5MLrod35K89Xh64wCRysfXXAYhjHdpUcKCrmYvfwR1EhSi3WaJTaWNgi7MWeAiLsLEuNghKVN7bZC1QStsDHkS7nivG2Gjni3ci6ABfMuR9ZcvpSrLCzqXDZZFRpfRKCcMqyAS",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "ecdsa-koblitz-pubkey:0x7e30a37763e6Ba1fFeDE1750bBeFB4c60b17a1B3"
          }
        },
        "expected": "Error",
        "stack": "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }"
      }
    },
    {
      "fullTitle": "Credential Status (optional) `credentialStatus` property MUST include `id` and `type` (negative - missing `type`)",
      "title": "MUST include `id` and `type` (negative - missing `type`)",
      "duration": 4366,
      "result": "failed",
      "err": {
        "message": "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
        "showDiff": true,
        "actual": {
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
          ],
          "id": "http://example.edu/credentials/3732",
          "type": [
            "VerifiableCredential",
            "UniversityDegreeCredential"
          ],
          "issuer": "https://example.edu/issuers/14",
          "issuanceDate": "2010-01-01T19:23:24Z",
          "credentialSubject": {
            "id": "did:example:ebfeb1f712ebc6f1c276e12ec21",
            "degree": {
              "type": "BachelorDegree",
              "name": "Bachelor of Science in Mechanical Engineering"
            }
          },
          "credentialStatus": {
            "id": "https://example.edu/status/24"
          },
          "proof": {
            "type": "MerkleProof2019",
            "created": "2020-08-20T14:51:33.507984",
            "proofValue": "zMcm4LfQFUZkWZxnqHozBwkauCWaW5Heu43Cy1C5kCnwBf4vKS9eqtKb7ZttWGoE6uVpfDgS169UEipmyMQgvA3Su7ydb6AutQWuDLqDgXCnZD6ABECQjZZadEUxVX6NREFMqPz6UKRRvDZAfvUCgXSBxcPLD4UC5yofxpBiyYh5Y7k1jZ7vNyNKaLKhVJC5wu3dQkv9Begmyks2JoZksNXfiRko48AN2SG4e8Ca6EcfRjGXkMTL2rBFA4B7FtRMT95JQnxpDqM88wapthNi5RD5EbDfjVxh2gPFtnnMoVyuUb8SCUr",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "ecdsa-koblitz-pubkey:0x7e30a37763e6Ba1fFeDE1750bBeFB4c60b17a1B3"
          }
        },
        "expected": "Error",
        "stack": "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }"
      }
    },
    {
      "fullTitle": "Linked Data Proofs (optional) `proof` property MUST be present",
      "title": "MUST be present",
      "duration": 4273,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Linked Data Proofs (optional) `proof` property MUST include specific method using the type property",
      "title": "MUST include specific method using the type property",
      "duration": 4093,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Linked Data Proofs (optional) `proof` property MUST include type property (negative - missing proof type)",
      "title": "MUST include type property (negative - missing proof type)",
      "duration": 3940,
      "result": "failed",
      "err": {
        "message": "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }",
        "showDiff": true,
        "actual": {
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
          ],
          "id": "http://example.gov/credentials/3732",
          "type": [
            "VerifiableCredential",
            "UniversityDegreeCredential"
          ],
          "issuer": "https://example.edu",
          "issuanceDate": "2017-06-18T21:19:00Z",
          "credentialSubject": {
            "id": "did:example:ebfeb1f712ebc6f1c276e12ec21",
            "degree": {
              "type": "BachelorDegree",
              "name": "Bachelor of Science in Mechanical Engineering"
            }
          },
          "proof": {
            "type": "MerkleProof2019",
            "created": "2020-08-20T14:39:14.398658",
            "proofValue": "zMcm4LfQFUZkWZxnw6JFadoYYdsRXtiSi6ZyFu5Sf4s59URDhTfQ3ruWXWhV7CcYKDCa5FJLwCk31XQ31z4TTmxroDcQCSV7D2uxanD6x2h2DxH1xwTJDEcoXzKtbro6pY39hjRFyQDGHRYnr9whxj1NcCmeG7BuG3xJdELR5Z6xpzT4Dero51QVzRniAAofGQ6W8nAob74w2qEbJqepc3ac5UsARMj14hAiVPYtqCFXogvisvJAkuNCyGmmgdLQAsjHVa2c7XsZrvhnXLewYNAEnvj7ifoGDRpFq4bUQGyks2sBfVv",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "ecdsa-koblitz-pubkey:0x7e30a37763e6Ba1fFeDE1750bBeFB4c60b17a1B3"
          }
        },
        "expected": "Error",
        "stack": "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, id, ...) }"
      }
    },
    {
      "fullTitle": "Credential Schema (optional) `credentialSchema` MUST provide one or more data schemas",
      "title": "`credentialSchema` MUST provide one or more data schemas",
      "duration": 3254,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Credential Schema (optional) each object within `credentialSchema`... MUST specify a `type` property with a valid value",
      "title": "MUST specify a `type` property with a valid value",
      "duration": 3510,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Credential Schema (optional) each object within `credentialSchema`... MUST specify an `id` property",
      "title": "MUST specify an `id` property",
      "duration": 3551,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Credential Schema (optional) each object within `credentialSchema`... value of `id` MUST be a URI identifying a schema file",
      "title": "value of `id` MUST be a URI identifying a schema file",
      "duration": 3369,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Refresh Service (optional) `refreshService` MUST provide one or more refresh services",
      "title": "`refreshService` MUST provide one or more refresh services",
      "duration": 4534,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Refresh Service (optional) each object within `refreshService`... MUST specify a `type` property with a valid value",
      "title": "MUST specify a `type` property with a valid value",
      "duration": 3420,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Refresh Service (optional) each object within `refreshService`... MUST specify an `id` property",
      "title": "MUST specify an `id` property",
      "duration": 3536,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Refresh Service (optional) each object within `refreshService`... value of `id` MUST be a URL identifying a service endpoint",
      "title": "value of `id` MUST be a URL identifying a service endpoint",
      "duration": 3789,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Terms of Use (optional) `termsOfUse` MUST provide one or more ToU objects",
      "title": "`termsOfUse` MUST provide one or more ToU objects",
      "duration": 4683,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Terms of Use (optional) each object within `termsOfUse`... MUST specify a `type` property with a valid value",
      "title": "MUST specify a `type` property with a valid value",
      "duration": 3821,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Evidence (optional) `evidence` MUST provide one or more evidence objects",
      "title": "`evidence` MUST provide one or more evidence objects",
      "duration": 4297,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Evidence (optional) each object within `evidence`... MUST specify a `type` property with a valid value",
      "title": "MUST specify a `type` property with a valid value",
      "duration": 3982,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... MUST contain a credentialSchema",
      "title": "MUST contain a credentialSchema",
      "duration": 3552,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... MUST contain a credentialSchema (negative - credentialSchema missing)",
      "title": "MUST contain a credentialSchema (negative - credentialSchema missing)",
      "duration": 3869,
      "result": "failed",
      "err": {
        "message": "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
        "showDiff": true,
        "actual": {
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
          ],
          "type": [
            "VerifiableCredential",
            "UniversityDegreeCredential"
          ],
          "issuer": "did:example:Wz4eUg7SetGfaUVCn8U9d62oDYrUJLuUtcy619",
          "issuanceDate": "2010-01-01T19:23:24Z",
          "credentialSubject": {
            "givenName": "Jane",
            "familyName": "Doe",
            "degree": {
              "type": "BachelorDegree",
              "name": "Bachelor of Science in Mechanical Engineering",
              "college": "College of Engineering"
            }
          },
          "proof": {
            "type": "MerkleProof2019",
            "created": "2020-08-20T14:40:53.757841",
            "proofValue": "zMcm4LfQFUZkWZyN6A3aNFvufMEDPLiBrDKE6gkQ9K6dfK5BRguDxSnGs1CTjneu4kZgvwKMBE8VAavkChzoDt2bMWPCjrNMcUJhh8KeGcVGgf4GifUTuUL1QWaPDUfpkkuxpwYCgCF6iFc2FJEGLpdvBqp8GDww53JwTguQpStC9riNvauXFANSo2HWCCsgv82cr8E9p4ijtEiv5PJTNW5w9n7mu7fqjBAQGmdLKYS3f3gTzJ36GMfzcF1Yj2RbTWMQhXernGUNknt6SgJMk1Gj2SvBiMR8DX4qNZn7AfSyPpuiKYY",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "ecdsa-koblitz-pubkey:0x7e30a37763e6Ba1fFeDE1750bBeFB4c60b17a1B3"
          }
        },
        "expected": "Error",
        "stack": "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }"
      }
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... MUST contain a proof",
      "title": "MUST contain a proof",
      "duration": 3866,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... MUST contain a proof (negative - missing)",
      "title": "MUST contain a proof (negative - missing)",
      "duration": 3798,
      "result": "failed",
      "err": {
        "message": "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
        "showDiff": true,
        "actual": {
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
          ],
          "type": [
            "VerifiableCredential",
            "UniversityDegreeCredential"
          ],
          "credentialSchema": {
            "id": "did:example:cdf:35LB7w9ueWbagPL94T9bMLtyXDj9pX5o",
            "type": "did:example:schema:22KpkXgecryx9k7N6XN1QoN3gXwBkSU8SfyyYQG"
          },
          "issuer": "did:example:Wz4eUg7SetGfaUVCn8U9d62oDYrUJLuUtcy619",
          "issuanceDate": "2010-01-01T19:23:24Z",
          "credentialSubject": {
            "givenName": "Jane",
            "familyName": "Doe",
            "degree": {
              "type": "BachelorDegree",
              "name": "Bachelor of Science in Mechanical Engineering",
              "college": "College of Engineering"
            }
          },
          "proof": {
            "type": "MerkleProof2019",
            "created": "2020-08-20T14:41:01.416152",
            "proofValue": "zMcm4LfQFUZkWZxqSy4UiHK788pxmE6Ha9s6bU387XfDLisCqPGfkUNtAsxr3q19t2WZLoAJ7dLDSGEpuLoeTwPVe6dGjf3AhfRWehsn3JKaEH2dJry4hpXoRdAkU9xhZq3BipP8NWfw1Yix9nZLYPrgMHSnFKzezpKUc4wHJXU6qMHUGEdQcr2GZ7qpFjE78e8GE3rYBVELL5mVEEQXxYG6DwVqKU7MqDXZWhi5cpQiGXKNjDcdf9soz15GH1E4ZakjNe4rYsiQFebZNB74aRgRJe63CPnZStLCdvndBfcKuYGLDeC",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "ecdsa-koblitz-pubkey:0x7e30a37763e6Ba1fFeDE1750bBeFB4c60b17a1B3"
          }
        },
        "expected": "Error",
        "stack": "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }"
      }
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... Each credentialSchema... MUST specify a type",
      "title": "MUST specify a type",
      "duration": 3756,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... Each credentialSchema... MUST specify a type (negative - type missing)",
      "title": "MUST specify a type (negative - type missing)",
      "duration": 4040,
      "result": "failed",
      "err": {
        "message": "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
        "showDiff": true,
        "actual": {
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
          ],
          "type": [
            "VerifiableCredential",
            "UniversityDegreeCredential"
          ],
          "credentialSchema": {
            "id": "did:example:cdf:35LB7w9ueWbagPL94T9bMLtyXDj9pX5o"
          },
          "issuer": "did:example:Wz4eUg7SetGfaUVCn8U9d62oDYrUJLuUtcy619",
          "issuanceDate": "2010-01-01T19:23:24Z",
          "credentialSubject": {
            "givenName": "Jane",
            "familyName": "Doe",
            "degree": {
              "type": "BachelorDegree",
              "name": "Bachelor of Science in Mechanical Engineering",
              "college": "College of Engineering"
            }
          },
          "proof": {
            "type": "MerkleProof2019",
            "created": "2020-08-20T14:41:09.220380",
            "proofValue": "zMcm4LfQFUZkWZxsqZqtVshK3gbSNbEGGPZURmq5McfYRfCJSLRpYeHvo1668QAF7jUCJP5uzJMzf6v1XDJaamTyNMMFrTVdWVpqq8QoK6RxioJr4dDVqygjzCgtRe4uMKeGVUbC7y8LqNqjxc46jD55EsHPtkjziJmPPttKy8Qa8SasLxMg7k1JgQfwrssicCXfGjZWjyfxPakwVFErFk5LZtTvz8zmfgqt6v4xsWuSWepdHBhynhrw1HnWvSUfcccWFZJBLuKu6nQvPxnYJsUywFoCnnPEcsNENxZU43KmG5QC4BV",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "ecdsa-koblitz-pubkey:0x7e30a37763e6Ba1fFeDE1750bBeFB4c60b17a1B3"
          }
        },
        "expected": "Error",
        "stack": "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }"
      }
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... Each credentialSchema... MUST specify an `id` property",
      "title": "MUST specify an `id` property",
      "duration": 3798,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... Each credentialSchema... MUST specify an `id` property (negative - `id` missing)",
      "title": "MUST specify an `id` property (negative - `id` missing)",
      "duration": 3798,
      "result": "failed",
      "err": {
        "message": "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
        "showDiff": true,
        "actual": {
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
          ],
          "type": [
            "VerifiableCredential",
            "UniversityDegreeCredential"
          ],
          "credentialSchema": {
            "type": "did:example:schema:22KpkXgecryx9k7N6XN1QoN3gXwBkSU8SfyyYQG"
          },
          "issuer": "did:example:Wz4eUg7SetGfaUVCn8U9d62oDYrUJLuUtcy619",
          "issuanceDate": "2010-01-01T19:23:24Z",
          "credentialSubject": {
            "givenName": "Jane",
            "familyName": "Doe",
            "degree": {
              "type": "BachelorDegree",
              "name": "Bachelor of Science in Mechanical Engineering",
              "college": "College of Engineering"
            }
          },
          "proof": {
            "type": "MerkleProof2019",
            "created": "2020-08-20T14:41:16.809526",
            "proofValue": "zMcm4LfQFUZkWZyMZReNHq6LjLBdRcfj5shFa9jWjJLdqJ2MFnkioMeb5LgJX7EWyQF9YD4EhKfUCuQnnj9HFb2QcoWjR3LowtJS8gvqnGkJf347xbi2u3bD55sT8rogUDBvjKwW2X16FgQNGcycNBCwXujnookXF86BmwJZQCPC68k3mcsQYB99KPgwWFffvKRb2RcN7QJDCKAcCi1EF3owHgCWW8wiXBVxbdM2V4hxAoNfbWxkBxcwryDweruVweqkaKdKE9Em4ChTb3QAXq1bMB5NDmMrPmWQzVgn7ud5HNYu4W3",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "ecdsa-koblitz-pubkey:0x7e30a37763e6Ba1fFeDE1750bBeFB4c60b17a1B3"
          }
        },
        "expected": "Error",
        "stack": "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }"
      }
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... Each credentialSchema... value of `id` MUST be a URI identifying a schema file",
      "title": "value of `id` MUST be a URI identifying a schema file",
      "duration": 5279,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... Each proof... MUST include specific method using the type property",
      "title": "MUST include specific method using the type property",
      "duration": 3620,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable credential... Each proof... proof MUST include type property (negative - missing proof type)",
      "title": "proof MUST include type property (negative - missing proof type)",
      "duration": 3615,
      "result": "failed",
      "err": {
        "message": "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
        "showDiff": true,
        "actual": {
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
          ],
          "type": [
            "VerifiableCredential",
            "UniversityDegreeCredential"
          ],
          "credentialSchema": {
            "id": "did:example:cdf:35LB7w9ueWbagPL94T9bMLtyXDj9pX5o",
            "type": "did:example:schema:22KpkXgecryx9k7N6XN1QoN3gXwBkSU8SfyyYQG"
          },
          "issuer": "did:example:Wz4eUg7SetGfaUVCn8U9d62oDYrUJLuUtcy619",
          "issuanceDate": "2010-01-01T19:23:24Z",
          "credentialSubject": {
            "givenName": "Jane",
            "familyName": "Doe",
            "degree": {
              "type": "BachelorDegree",
              "name": "Bachelor of Science in Mechanical Engineering",
              "college": "College of Engineering"
            }
          },
          "proof": {
            "type": "MerkleProof2019",
            "created": "2020-08-20T14:41:29.314715",
            "proofValue": "zMcm4LfQFUZkWZyN58t7RHbNUPEZ3JAaKS4Lj7STkyuXSQW8pVfoZnWzFU4nbLMjVFPeiKbZEV2zMWeQ7b1Ue7gAdPmbzQUwwtBHLayGZrArRzqh1qafeqqf5kgmTgkQ8vKsZeSPsnRkkrr3n6XQAG5gjkgJ973eMcbx8srRiqDDfunrmmJKV7omKur3vrCJUNVchC8gSHqrqjkkCMkHiB6EycTd2X7w89dVbpRU2tNkB64a6qMc9Jp1u1B7QRDpKzr9yuo7oyGxfwLEvhVPmckMkjjyarhzKzHAhb5sRddoc2YB9F7",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "ecdsa-koblitz-pubkey:0x7e30a37763e6Ba1fFeDE1750bBeFB4c60b17a1B3"
          }
        },
        "expected": "Error",
        "stack": "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }"
      }
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable presentation... MUST be of type `VerifiablePresentation`",
      "title": "MUST be of type `VerifiablePresentation`",
      "duration": 7,
      "result": "failed",
      "err": {
        "stack": "Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)",
        "message": "Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n",
        "killed": false,
        "code": 126,
        "signal": null,
        "cmd": "  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld",
        "stdout": "",
        "stderr": "/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n"
      }
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable presentation... MUST include `verifiableCredential`",
      "title": "MUST include `verifiableCredential`",
      "duration": 7,
      "result": "failed",
      "err": {
        "stack": "Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Socket.stream.socket.on (internal/child_process.js:403:11)\n    at Pipe._handle.close (net.js:614:12)",
        "message": "Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n",
        "killed": false,
        "code": 126,
        "signal": null,
        "cmd": "  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld",
        "stdout": "",
        "stderr": "/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n"
      }
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable presentation... MUST include `verifiableCredential` (negative - missing `verifiableCredential`)",
      "title": "MUST include `verifiableCredential` (negative - missing `verifiableCredential`)",
      "duration": 8,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable presentation... MUST include `proof`",
      "title": "MUST include `proof`",
      "duration": 7,
      "result": "failed",
      "err": {
        "stack": "Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)",
        "message": "Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n",
        "killed": false,
        "code": 126,
        "signal": null,
        "cmd": "  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld",
        "stdout": "",
        "stderr": "/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n"
      }
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable presentation... MUST include `proof` (negative - missing `proof`)",
      "title": "MUST include `proof` (negative - missing `proof`)",
      "duration": 8,
      "result": "passed",
      "err": {}
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable presentation... Each verifiable credential... MUST have a `credentialSchema` member",
      "title": "MUST have a `credentialSchema` member",
      "duration": 15,
      "result": "failed",
      "err": {
        "stack": "Error: Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n\n    at ChildProcess.exithandler (child_process.js:299:12)\n    at maybeClose (internal/child_process.js:999:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:266:5)",
        "message": "Command failed:   /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld\n/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n",
        "killed": false,
        "code": 126,
        "signal": null,
        "cmd": "  /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld",
        "stdout": "",
        "stderr": "/bin/sh: /Users/julien/work/vc-test-suite/test/vc-data-model-1.0/input/example-015-zkp-vp.jsonld: Permission denied\n"
      }
    },
    {
      "fullTitle": "Zero-Knowledge Proofs (optional) A verifiable presentation... Each verifiable credential... MUST contain a credentialSchema (negative - credentialSchema missing)",
      "title": "MUST contain a credentialSchema (negative - credentialSchema missing)",
      "duration": 4178,
      "result": "failed",
      "err": {
        "message": "expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }",
        "showDiff": true,
        "actual": {
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
          ],
          "type": "VerifiablePresentation",
          "verifiableCredential": {
            "@context": [
              "https://www.w3.org/2018/credentials/v1",
              "https://www.w3.org/2018/credentials/examples/v1"
            ],
            "type": [
              "VerifiableCredential",
              "UniversityDegreeCredential"
            ],
            "issuer": "did:example:Wz4eUg7SetGfaUVCn8U9d62oDYrUJLuUtcy619",
            "issuanceDate": "2010-01-01T19:23:24Z",
            "credentialSubject": {
              "degreeType": "BachelorDegree",
              "degreeSchool": "College of Engineering"
            },
            "proof": {
              "type": "ex:AnonCredDerivedCredentialv1",
              "primaryProof": "cg7wLNSi48K5qNyAVMwdYqVHSMv1Ur8i...Fg2ZvWF6zGvcSAsym2sgSk737",
              "nonRevocationProof": "mu6fg24MfJPU1HvSXsf3ybzKARib4WxG...RSce53M6UwQCxYshCuS3d2h"
            }
          },
          "proof": {
            "type": "MerkleProof2019",
            "created": "2020-08-20T14:41:33.568695",
            "proofValue": "zMcm4LfQFUZkWZxsxWPgp6DrdPpgMgyrt1HpiRRwiBDd8i2JMeL9AszeDjjVyMWzwYf8UQZFLQkRWZGpQxB8GXtUpH1MEQcLLCTuomFN4t8bChA7GDJAVV5DcNLuKQrHbSg2zrfL5ytLgne1b15U58Vs7qnSTRTYcQ9XeiJbbm5rQ1XhPdHXsrsE2NTxT18w8NGNjHoyALoVyVKRz4gwbH7R8ftAa4S2g3oVuTXc9FQkHAfYER5BuMAYDnEGysQWTkK8aE7eJKhchrsLazBj9Qb2wLo5QN4yyfCkcVJkapNcjCooPiH",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "ecdsa-koblitz-pubkey:0x7e30a37763e6Ba1fFeDE1750bBeFB4c60b17a1B3"
          }
        },
        "expected": "Error",
        "stack": "AssertionError: expected promise to be rejected with 'Error' but it was fulfilled with { Object (@context, type, ...) }"
      }
    }
  ],
  "stats": {
    "suites": 42,
    "tests": 94,
    "passes": 30,
    "pending": 63,
    "failures": 1,
    "start": "2023-03-14T13:10:09.489Z",
    "end": "2023-03-14T13:11:18.737Z",
    "duration": 69248
  }
}